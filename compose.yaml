services:
  houer-api:
    image: "houer-api"
    build: .
    environment:
      - management.endpoints.web.exposure.include=prometheus,info,health
    ports:
      - "8080:8080"
    env_file:
      - ./docker.env
    depends_on:
      - rabbitmq
      - prometheus
      - postgres

  # --- RabbitMQ ------------------------------------------
  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # --- Prometheus ------------------------------------------
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/rules:/etc/prometheus/rules
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    ports:
      - "9090:9090"

  # --- Grafana ---------------------------------------------
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  postgres:
    image: "postgres:17.5"
    environment:
      - POSTGRES_DB=houer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Teste123@
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  rabbitmq_data:
  grafana_data:
  postgres_data:
