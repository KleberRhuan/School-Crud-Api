# Configurações comuns a todos os ambientes
spring:
  main:
    web-application-type: servlet
    banner-mode: console
    lazy-initialization: false

  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
    url: ${JDBC_DATABASE_URL}

    hikari: # Configurações de pool de conexões HikariCP
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:2}
      pool-name: HouerHikariCP
      connection-test-query: SELECT 1
      leak-detection-threshold: ${DB_LEAK_DETECTION:60000}
      data-source-properties:
        sslMode: require
  web:
    locale: pt_BR
    locale-resolver: fixed

  application:
    name: houer
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  security:
    oauth2:
      resourceserver:
        jwt:
          authorities-claim-name: scope
          authority-prefix: ROLE_

  # Configurações de banco de dados
  flyway:
    default-schema: config
    locations: classpath:db/migration,classpath:db/callback
    validate-on-migrate: true
    clean-disabled: true
    baseline-on-migrate: false

  # Configurações de serialização
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: false
    time-zone: UTC
    date-format: com.fasterxml.jackson.databind.util.StdDateFormat
    deserialization:
      fail-on-unknown-properties: true
      accept-empty-string-as-null-object: true
    default-property-inclusion: NON_NULL

  # Configurações JPA
  jpa:
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        query:
          plan_cache_max_size: 2048
          in_clause_parameter_padding: true

  docker:
    compose:
      enabled: false

  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    virtual-host: ${RABBITMQ_VHOST:/}
    ssl:
      enabled: ${RABBITMQ_SSL_ENABLED:false}
    listener:
      simple:
        acknowledge-mode: auto
        retry:
          enabled: true
          initial-interval: 1000ms
          max-attempts: 3
          max-interval: 10000ms
          multiplier: 2.0
    template:
      retry:
        enabled: true
        initial-interval: 1000ms
        max-attempts: 3
        max-interval: 10000ms
        multiplier: 2.0

  # Spring Batch Configuration
  batch:
    job:
      enabled: false # Desabilita auto-start de jobs
    jdbc:
      initialize-schema: always
      table-prefix: BATCH_
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tryItOutEnabled: true
    filter: true
    syntaxHighlight:
      activated: true
    # Configurações de autenticação persistentes
    persistAuthorization: true
    # Layout da documentação
    displayRequestDuration: true

  # Configurações gerais
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
  show-actuator: false
  writer-with-default-pretty-printer: true

# Configuração de propriedade para habilitar/desabilitar a documentação
api:
  swagger:
    enabled: true

# Configurações de segurança
jwt:
  publicKey: ${JWT_PUBLIC_KEY:classpath:certificates/public.pub}
  privateKey: ${JWT_PRIVATE_KEY:classpath:certificates/private.pem}
  access-ttl-sec: ${JWT_ACCESS_TOKEN_EXPIRATION:900}
  refresh-ttl-sec: ${JWT_REFRESH_TOKEN_EXPIRATION:604800}
  issuer: ${JWT_ISSUER:Houer}

auth:
  reset:
    code-length: 6
    ttl-in-seconds: ${AUTH_RESET_EXPIRATION:900}
    max-attempts-per-hour: ${AUTH_MAX_RESET_ATTEMPTS:3}
    frontend-base-url: ${APP_FRONTEND_URL:http://localhost:3000}
  cache:
    provider: caffeine

app:

  # Configurações de armazenamento CSV
  csv:
    storage:
      base-dir: ${CSV_STORAGE_BASE_DIR:uploads/csv}
      create-directories: ${CSV_STORAGE_CREATE_DIRS:true}
      delete-after-processing: ${CSV_STORAGE_DELETE_AFTER_PROCESSING:true}

  notification:
    provider:
      email: brevo
  i18n:
    basename: classpath:i18n/messages
    cache-seconds: 3600
    fallback-to-system-locale: true
  outbox:
    backoff: 30s
    retry-interval: 60s
  # Configurações de notificação
  brevo:
    api-key: ${BREVO_API_KEY}
    name: ${BREVO_NAME:Houer Test}
    email: ${BREVO_EMAIL:noreply@kleberrhuan.dev}
    url: ${BREVO_URL:https://api.brevo.com/v3 }
    connect-timeout: 3 #(Segundos)
    read-timeout: 5 #(Segundos)

  # Configurações da aplicação
  houer:
    url: ${HOUER_RESEARCH_URL:http://localhost:8080}
    caches:
      default:
        ttl: 30m
        max-size: 1000
      rate-limit:
        ttl: 1m
        max-size: 20000
      jwt-blacklist:
        ttl: 15m
        max-size: 20000

  # Configurações de Rate Limiting
  rate-limit:
    enabled: ${RATE_LIMIT_ENABLED:true}

  # Configurações de CORS
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600

  # Configurações de validação
  validation:
    password:
      min-length: ${PASSWORD_MIN_LENGTH:8}
      require-uppercase: ${PASSWORD_REQUIRE_UPPERCASE:true}
      require-lowercase: ${PASSWORD_REQUIRE_LOWERCASE:true}
      require-numbers: ${PASSWORD_REQUIRE_NUMBERS:true}
      require-special-chars: ${PASSWORD_REQUIRE_SPECIAL:true}

  # Configurações de arquivo/upload
  file:
    upload:
      max-size: ${FILE_MAX_SIZE:10MB}
      allowed-types: ${FILE_ALLOWED_TYPES:pdf,doc,docx,xls,xlsx,png,jpg,jpeg}
      temp-directory: ${FILE_TEMP_DIR:/tmp/houer-uploads}

  # Configurações de auditoria
  audit:
    enabled: ${AUDIT_ENABLED:true}
    log-requests: ${AUDIT_LOG_REQUESTS:true}
    log-responses: ${AUDIT_LOG_RESPONSES:false}
    log-request-body: ${AUDIT_LOG_REQUEST_BODY:true}
    log-response-body: ${AUDIT_LOG_RESPONSE_BODY:false}
    log-only-failures: ${AUDIT_LOG_ONLY_FAILURES:false}
    max-body-size: ${AUDIT_MAX_BODY_SIZE:1024}
    sensitive-headers: ${AUDIT_SENSITIVE_HEADERS:Authorization,Cookie,X-API-Key,X-Auth-Token}
    ignored-paths: ${AUDIT_IGNORED_PATHS:/actuator/**,/swagger-ui/**,/api-docs/**}

# School Import Configuration
school:
  import:
    batch:
      chunk-size: ${SCHOOL_IMPORT_CHUNK_SIZE:1000}
      thread-count: ${SCHOOL_IMPORT_THREAD_COUNT:4}
      max-retry-attempts: ${SCHOOL_IMPORT_MAX_RETRY:3}
    rabbitmq:
      queue:
        csv-import: ${SCHOOL_CSV_IMPORT_QUEUE:school.csv.import}
        csv-notification: ${SCHOOL_CSV_NOTIFICATION_QUEUE:school.csv.notification}
      exchange:
        csv-import: ${SCHOOL_CSV_IMPORT_EXCHANGE:school.csv.import.exchange}
        csv-notification: ${SCHOOL_CSV_NOTIFICATION_EXCHANGE:school.csv.notification.exchange}
      routing-key:
        csv-import: ${SCHOOL_CSV_IMPORT_ROUTING_KEY:school.csv.import.route}
        csv-notification: ${SCHOOL_CSV_NOTIFICATION_ROUTING_KEY:school.csv.notification.route}
    validation:
      max-file-size: ${SCHOOL_CSV_MAX_FILE_SIZE:10MB}
      allowed-extensions: ${SCHOOL_CSV_ALLOWED_EXTENSIONS:csv}
    websocket:
      endpoint: ${SCHOOL_WEBSOCKET_ENDPOINT:/ws/school-import}
      allowed-origins: ${SCHOOL_WEBSOCKET_ALLOWED_ORIGINS:*}

# Configurações do servidor
server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/css,application/javascript,application/json,text/plain
    min-response-size: 1024
  http2:
    enabled: true
  error:
    include-exception: false
    include-stacktrace: never
    include-message: never
    include-binding-errors: never
  tomcat:
    threads:
      max: ${SERVER_TOMCAT_MAX_THREADS:200}
      min-spare: ${SERVER_TOMCAT_MIN_SPARE_THREADS:10}
    connection-timeout: ${SERVER_TOMCAT_CONNECTION_TIMEOUT:20000}
    keep-alive-timeout: ${SERVER_TOMCAT_KEEP_ALIVE_TIMEOUT:20000}
    max-connections: ${SERVER_TOMCAT_MAX_CONNECTIONS:8192}
    accept-count: ${SERVER_TOMCAT_ACCEPT_COUNT:100}
    relaxed-query-chars: ["[", "]"]

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  observations:
    annotations:
      enabled: true
  metrics:
    enable:
      "email.brevo.duration": true
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0

resilience4j:
  retry:
    instances:
      brevo-email:
        max-attempts: 3
        wait-duration: 2s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.lang.Exception
        ignore-exceptions:
          - com.kleberrhuan.houer.common.infra.exception.EmailDeliveryException
  circuitbreaker:
    instances:
      outbox-store:
        base-config: default
      brevo-email:
        failure-rate-threshold: 50
        sliding-window-size: 10
        wait-duration-in-open-state: 30s
        record-exceptions:
          - com.kleberrhuan.houer.common.infra.exception.EmailDeliveryException
    configs:
      default:
        slidingWindowSize: 50
        failureRateThreshold: 50
        waitDurationInOpenState: 15s

# Configurações do Outbox Pattern
outbox:
  backoff: 30s

# Logging Configuration
logging:
  level:
    com.kleberrhuan.houer.school: ${SCHOOL_LOG_LEVEL:INFO}
    org.springframework.batch: ${BATCH_LOG_LEVEL:WARN}
    org.springframework.amqp: ${RABBITMQ_LOG_LEVEL:WARN}
    org.springframework.web.socket: ${WEBSOCKET_LOG_LEVEL:WARN}

# Configurações do usuário admin (callback Flyway)
admin:
  default:
    email: ${ADMIN_DEFAULT_EMAIL:admin@houer.com}
    name: ${ADMIN_DEFAULT_NAME:Administrador do Sistema}
    password-hash: ${ADMIN_DEFAULT_PASSWORD_HASH:$2a$10$N.zmdr9k7uOIW8B.Wneqh.XvVWnZ6m7qBjHiQkqjjFaO7s5YjjKWG}
  production:
    password-hash: ${ADMIN_PROD_PASSWORD_HASH:$2a$12$vQx8wHZQ9F2nK.XB8Hl6uOyZFj3sP.dR1mX7nE9kL5tW2cA8fJ6gK}
