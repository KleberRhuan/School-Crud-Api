# Configura��es comuns a todos os ambientes
spring:
  main:
    web-application-type: servlet
    banner-mode: console
    lazy-initialization: false
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${JDBC_DATABASE_USERNAME:postgres}
    password: ${JDBC_DATABASE_PASSWORD:Teste123@}    
    hikari:     # Configura��es de pool de conex�es HikariCP
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      maximum-pool-size: ${DB_MAX_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:2}
      pool-name: HouerHikariCP
      connection-test-query: SELECT 1
      leak-detection-threshold: ${DB_LEAK_DETECTION:60000}
      
  web:
    locale: pt_BR
    locale-resolver: fixed
  
  application:
    name: houer
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  security:
    oauth2:
      resourceserver:
        jwt:
          authorities-claim-name: scope
          authority-prefix: ROLE_
  
  # Configura��es de banco de dados
  flyway:
    default-schema: config
    locations: classpath:db/migration
    validate-on-migrate: true
    clean-disabled: true
    baseline-on-migrate: false
  
  # Configura��es de serializa��o
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: false
    time-zone: UTC
    date-format: com.fasterxml.jackson.databind.util.StdDateFormat
    deserialization:
      fail-on-unknown-properties: true
      accept-empty-string-as-null-object: true
    default-property-inclusion: NON_NULL
  
  # Configura��es JPA
  jpa:
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        query:
          plan_cache_max_size: 2048
          in_clause_parameter_padding: true

# Configura��es do SpringDoc OpenAPI
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tryItOutEnabled: true
    filter: true
    syntaxHighlight:
      activated: true
    # Configura��es de autentica��o persistentes
    persistAuthorization: true
    # Layout da documenta��o
    displayRequestDuration: true

  # Configura��es gerais
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
  show-actuator: false
  writer-with-default-pretty-printer: true

# Configura��o de propriedade para habilitar/desabilitar a documenta��o
api:
  swagger:
    enabled: true

# Configura��es de seguran�a
jwt:
  public-key: ${JWT_PUBLIC_KEY:classpath:certificates/public.pub}
  private-key: ${JWT_PRIVATE_KEY:classpath:certificates/private.pem}
  expiration-in-seconds: ${JWT_EXPIRATION:900}
  issuer: ${JWT_ISSUER:Houer Application}

auth:
  reset:
    code-length: 6
    ttl-in-seconds: ${AUTH_RESET_EXPIRATION:900}

app:
  notification:
    provider:
      email: brevo
  i18n:
    basename: classpath:i18n/messages
    cache-seconds: 3600
    fallback-to-system-locale: true
  outbox:
    retry-interval: 60s
  # Configura��es de notifica��o
  brevo:
    api-key: ${BREVO_API_KEY}
    name: ${BREVO_NAME:Houer Test}
    email: ${BREVO_EMAIL:noreply@kleberrhuan.dev}
    url: ${BREVO_URL:https://kleberrhuan.dev}
    connect-timeout: 3 #(Segundos)
    read-timeout: 5 #(Segundos)
  
  # Configura��es da aplica��o
  houer:
      url: ${HOUER_RESEARCH_URL:http://localhost:8080}
      caches:
        outbox-message:
          ttl: 
        jwt-blacklist:
          ttl: 15m
          max-size: 1_000
        rate-minute:
          ttl: 1m
          max-size: 10_000
        rate-auth:
          ttl: 1m
          max-size: 5_000
        default:
          ttl: 30m
          max-size: 1_000
  
  # Configura��es de Rate Limiting
  rate-limit:
    enabled: ${RATE_LIMIT_ENABLED:true}
    
  # Configura��es de CORS
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  # Configura��es de valida��o
  validation:
    password:
      min-length: ${PASSWORD_MIN_LENGTH:8}
      require-uppercase: ${PASSWORD_REQUIRE_UPPERCASE:true}
      require-lowercase: ${PASSWORD_REQUIRE_LOWERCASE:true}
      require-numbers: ${PASSWORD_REQUIRE_NUMBERS:true}
      require-special-chars: ${PASSWORD_REQUIRE_SPECIAL:true}
  
  # Configura��es de arquivo/upload
  file:
    upload:
      max-size: ${FILE_MAX_SIZE:10MB}
      allowed-types: ${FILE_ALLOWED_TYPES:pdf,doc,docx,xls,xlsx,png,jpg,jpeg}
      temp-directory: ${FILE_TEMP_DIR:/tmp/houer-uploads}
  
  # Configura��es de auditoria
  audit:
    enabled: ${AUDIT_ENABLED:true}
    log-requests: ${AUDIT_LOG_REQUESTS:true}
    log-responses: ${AUDIT_LOG_RESPONSES:false}
    log-request-body: ${AUDIT_LOG_REQUEST_BODY:true}
    log-response-body: ${AUDIT_LOG_RESPONSE_BODY:false}
    log-only-failures: ${AUDIT_LOG_ONLY_FAILURES:false}
    max-body-size: ${AUDIT_MAX_BODY_SIZE:1024}
    sensitive-headers: ${AUDIT_SENSITIVE_HEADERS:Authorization,Cookie,X-API-Key,X-Auth-Token}
    ignored-paths: ${AUDIT_IGNORED_PATHS:/actuator/**,/swagger-ui/**,/api-docs/**}

# Configura��es do servidor
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/css,application/javascript,application/json,text/plain
    min-response-size: 1024
  http2:
    enabled: true
  error:
    include-exception: false
    include-stacktrace: never
    include-message: never
    include-binding-errors: never
  tomcat:
    threads:
      max: ${SERVER_TOMCAT_MAX_THREADS:200}
      min-spare: ${SERVER_TOMCAT_MIN_SPARE_THREADS:10}
    connection-timeout: ${SERVER_TOMCAT_CONNECTION_TIMEOUT:20000}
    keep-alive-timeout: ${SERVER_TOMCAT_KEEP_ALIVE_TIMEOUT:20000}
    max-connections: ${SERVER_TOMCAT_MAX_CONNECTIONS:8192}
    accept-count: ${SERVER_TOMCAT_ACCEPT_COUNT:100}
    relaxed-query-chars: ["[", "]"]
  
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  metrics:
    enable:
      "email.brevo.duration": true
    distribution:
      percentiles-histogram:
        http.server.requests: true
  tracing:
    sampling:
      probability: 1.0


resilience4j:
  retry:
    instances:
      brevo-email:
        max-attempts: 5
        wait-duration: 2s
        exponential-backoff-multiplier: 2
  circuitbreaker:
    instances:
      brevo-email:
        failure-rate-threshold: 50
        sliding-window-size: 20
        wait-duration-in-open-state: 30s

