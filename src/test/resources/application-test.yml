# Configurações específicas para testes
spring:
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS auth\;CREATE SCHEMA IF NOT EXISTS school\;CREATE SCHEMA IF NOT EXISTS csv
    username: sa
    password:
    hikari:
      connection-timeout: 5000
      idle-timeout: 60000
      max-lifetime: 300000
      maximum-pool-size: 5
      minimum-idle: 1
      pool-name: TestHikariCP

  # JPA configuração para testes
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        jdbc:
          time_zone: UTC
        format_sql: false
        default_schema: PUBLIC

  # Habilitar inicialização do schema para testes
  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql
      continue-on-error: false

  # Desabilitar funcionalidades desnecessárias para testes
  flyway:
    enabled: false

  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: never

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        enabled: false

  # Configurações específicas de teste
  h2:
    console:
      enabled: false

  # Configurações de segurança para testes
  security:
    oauth2:
      resourceserver:
        jwt:
          authorities-claim-name: scope
          authority-prefix: ROLE_

# Configurações JWT para testes
jwt:
  public-key: classpath:certificates/public.pub
  private-key: classpath:certificates/private.pem
  access-ttl-sec: 900
  refresh-ttl-sec: 604800
  issuer: test-issuer

# Configurações de logging para testes
logging:
  level:
    com.kleberrhuan.houer: INFO
    org.springframework: WARN
    org.hibernate: WARN
    org.springframework.security: DEBUG

# Habilitar métricas mínimas para testes (necessário para PostValidationFilter)
management:
  endpoints:
    enabled-by-default: false
  metrics:
    enabled: true # Habilitado para permitir criação do PostValidationFilter
  prometheus:
    metrics:
      export:
        enabled: false

# Configurações de CSV para testes
app:
  csv:
    max-file-size: 10MB
    import:
      batch-size: 100
      thread-pool-size: 2
    storage:
      base-dir: target/test-uploads
      create-directories: true
      delete-after-processing: false

  # Configurações do Rate Limiting para testes
  rate-limit:
    enabled: false # Desabilitado para testes
    requests-per-minute: 100
    auth-requests-per-minute: 50
    time-window-minutes: 1
    requests-per-hour: 1000
    time-window-hours: 1

  # Configurações do Houer para cache
  houer:
    url: http://localhost:8080
    caches:
      default:
        ttl: 30m
        max-size: 100
      rate-limit:
        ttl: 1m
        max-size: 1000
      jwt-blacklist:
        ttl: 15m
        max-size: 1000

auth:
  reset:
    code-length: 6
    ttl-in-seconds: 300
    max-attempts-per-hour: 5
  cache:
    provider: caffeine
