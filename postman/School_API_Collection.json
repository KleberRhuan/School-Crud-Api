{
  "info": {
    "name": "Houer School Management API - CRUD Escolas",
    "description": "Cole√ß√£o de requests para cria√ß√£o e edi√ß√£o de escolas na API Houer School Management",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Verificar se o token JWT est√° presente",
          "if (!pm.globals.get('jwt_token') && !pm.environment.get('jwt_token')) {",
          "    console.log('‚ö†Ô∏è  Token JWT n√£o encontrado. Execute o request de login primeiro.');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Autentica√ß√£o",
      "item": [
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Login realizado com sucesso', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    ",
                  "    // Salvar token JWT",
                  "    if (responseJson.accessToken) {",
                  "        pm.environment.set('jwt_token', responseJson.accessToken);",
                  "        pm.globals.set('jwt_token', responseJson.accessToken);",
                  "        console.log('‚úÖ Token JWT salvo com sucesso');",
                  "    }",
                  "    ",
                  "    // Salvar refresh token",
                  "    if (responseJson.refreshToken) {",
                  "        pm.environment.set('refresh_token', responseJson.refreshToken);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@houer.com\",\n  \"password\": \"Admin123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login com usu√°rio administrador para obter token JWT necess√°rio para criar/editar escolas"
          }
        }
      ]
    },
    {
      "name": "üè´ Escolas - CRUD",
      "item": [
        {
          "name": "Criar Nova Escola",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Escola criada com sucesso', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response cont√©m dados da escola', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('code');",
                  "    pm.expect(responseJson).to.have.property('schoolName');",
                  "    pm.expect(responseJson).to.have.property('metrics');",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set('created_school_code', responseJson.code);",
                  "    console.log('‚úÖ Escola criada com c√≥digo: ' + responseJson.code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": 12345678,\n  \"schoolName\": \"Escola Municipal Vila Nova\",\n  \"administrativeDependency\": \"Municipal\",\n  \"stateCode\": \"SP\",\n  \"municipality\": \"S√£o Paulo\",\n  \"district\": \"Vila Nova\",\n  \"schoolType\": 1,\n  \"schoolTypeDescription\": \"P√∫blica Municipal\",\n  \"situationCode\": 1,\n  \"schoolCode\": 12345678,\n  \"metrics\": {\n    \"SALAS_AULA\": 15,\n    \"BIBLIOTECA\": 1,\n    \"QUADRA_COBERTA\": 1,\n    \"LAB_INFO\": 1,\n    \"REFEITORIO\": 1,\n    \"AUDITORIO\": 0,\n    \"PISCINA\": 0,\n    \"GINASIO\": 0\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools"]
            },
            "description": "Cria uma nova escola com dados b√°sicos e m√©tricas. Requer autentica√ß√£o de administrador."
          }
        },
        {
          "name": "Criar Escola Estadual",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Escola estadual criada com sucesso', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const responseJson = pm.response.json();",
                  "    pm.environment.set('estadual_school_code', responseJson.code);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": 87654321,\n  \"schoolName\": \"Escola Estadual Prof. Jo√£o Silva\",\n  \"administrativeDependency\": \"Estadual\",\n  \"stateCode\": \"RJ\",\n  \"municipality\": \"Rio de Janeiro\",\n  \"district\": \"Copacabana\",\n  \"schoolType\": 2,\n  \"schoolTypeDescription\": \"P√∫blica Estadual\",\n  \"situationCode\": 1,\n  \"schoolCode\": 87654321,\n  \"metrics\": {\n    \"SALAS_AULA\": 25,\n    \"BIBLIOTECA\": 1,\n    \"QUADRA_COBERTA\": 2,\n    \"QUADRA_DESCOBERTA\": 1,\n    \"LAB_INFO\": 2,\n    \"LAB_CIENCIAS\": 1,\n    \"LAB_FISICA\": 1,\n    \"LAB_QUIMICA\": 1,\n    \"REFEITORIO\": 1,\n    \"AUDITORIO\": 1,\n    \"TEATRO\": 0,\n    \"PISCINA\": 1,\n    \"GINASIO\": 1\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools"]
            },
            "description": "Exemplo de cria√ß√£o de escola estadual com mais infraestrutura"
          }
        },
        {
          "name": "Atualizar Escola Municipal",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Escola atualizada com sucesso', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response cont√©m dados atualizados', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('schoolName');",
                  "    pm.expect(responseJson.schoolName).to.include('Atualizada');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"schoolName\": \"Escola Municipal Vila Nova - Atualizada\",\n  \"municipality\": \"S√£o Paulo\",\n  \"district\": \"Vila Nova Concei√ß√£o\",\n  \"metrics\": {\n    \"SALAS_AULA\": 18,\n    \"BIBLIOTECA\": 1,\n    \"QUADRA_COBERTA\": 1,\n    \"LAB_INFO\": 2,\n    \"REFEITORIO\": 1,\n    \"AUDITORIO\": 1,\n    \"PISCINA\": 0,\n    \"GINASIO\": 0,\n    \"PLAYGROUND\": 1,\n    \"SALA_LEITURA\": 1\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools/{{created_school_code}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools", "{{created_school_code}}"]
            },
            "description": "Atualiza dados da escola criada anteriormente. Usa vari√°vel de ambiente com o c√≥digo da escola."
          }
        },
        {
          "name": "Atualizar Apenas M√©tricas",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('M√©tricas atualizadas com sucesso', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('M√©tricas foram modificadas', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.metrics.metrics.SALAS_AULA).to.equal(30);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"metrics\": {\n    \"SALAS_AULA\": 30,\n    \"LAB_FISICA\": 1,\n    \"LAB_BIOLOGIA\": 1,\n    \"VESTIARIO_FEM\": 2,\n    \"VESTIARIO_MASC\": 2\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools/{{estadual_school_code}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools", "{{estadual_school_code}}"]
            },
            "description": "Atualiza√ß√£o parcial: apenas m√©tricas da escola estadual"
          }
        },
        {
          "name": "Buscar Escola Criada",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Escola encontrada', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Dados da escola est√£o corretos', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.code).to.equal(parseInt(pm.environment.get('created_school_code')));",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/schools/{{created_school_code}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools", "{{created_school_code}}"]
            },
            "description": "Busca a escola criada para verificar se os dados est√£o corretos"
          }
        },
        {
          "name": "Listar M√©tricas Dispon√≠veis",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Lista de m√©tricas retornada', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Cont√©m m√©tricas essenciais', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.include('SALAS_AULA');",
                  "    pm.expect(responseJson).to.include('BIBLIOTECA');",
                  "    pm.expect(responseJson).to.include('QUADRA_COBERTA');",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/schools/metrics",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools", "metrics"]
            },
            "description": "Lista todas as m√©tricas dispon√≠veis para uso nas escolas"
          }
        }
      ]
    },
    {
      "name": "‚ùå Testes de Erro",
      "item": [
        {
          "name": "Criar Escola - Dados Inv√°lidos",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Retorna erro de valida√ß√£o', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": -1,\n  \"schoolName\": \"\",\n  \"administrativeDependency\": \"\"  \n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools"]
            },
            "description": "Teste de valida√ß√£o com dados inv√°lidos"
          }
        },
        {
          "name": "Criar Escola - C√≥digo Duplicado",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Retorna erro de conflito', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": {{created_school_code}},\n  \"schoolName\": \"Escola Duplicada\",\n  \"administrativeDependency\": \"Municipal\",\n  \"stateCode\": \"SP\",\n  \"municipality\": \"S√£o Paulo\",\n  \"district\": \"Centro\",\n  \"schoolType\": 1,\n  \"schoolTypeDescription\": \"P√∫blica\",\n  \"situationCode\": 1,\n  \"schoolCode\": {{created_school_code}}\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools"]
            },
            "description": "Teste cria√ß√£o de escola com c√≥digo j√° existente"
          }
        },
        {
          "name": "Atualizar Escola Inexistente",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Retorna erro not found', function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"schoolName\": \"Escola Inexistente\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools/999999999",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools", "999999999"]
            },
            "description": "Teste atualiza√ß√£o de escola que n√£o existe"
          }
        },
        {
          "name": "Criar Escola - Sem Autentica√ß√£o",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Retorna erro de autentica√ß√£o', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": 99999999,\n  \"schoolName\": \"Escola Sem Auth\",\n  \"administrativeDependency\": \"Municipal\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/schools",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "schools"]
            },
            "description": "Teste cria√ß√£o sem token de autentica√ß√£o"
          }
        }
      ]
    }
  ]
} 